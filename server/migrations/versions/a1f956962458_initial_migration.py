"""Initial Migration

Revision ID: a1f956962458
Revises: 
Create Date: 2025-02-03 11:09:51.022014

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a1f956962458'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments')),
    sa.UniqueConstraint('name', name=op.f('uq_departments_name'))
    )
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_levels')),
    sa.UniqueConstraint('name', name=op.f('uq_levels_name'))
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_students')),
    sa.UniqueConstraint('email', name=op.f('uq_students_email'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('_password_hash', sa.String(length=60), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_courses_department_id_departments')),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], name=op.f('fk_courses_level_id_levels')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses')),
    sa.UniqueConstraint('name', name=op.f('uq_courses_name'))
    )
    op.create_table('course_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.Column('report_text', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_reports_course_id_courses')),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], name=op.f('fk_course_reports_instructor_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_reports'))
    )
    op.create_table('student_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.Column('report_text', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_student_reports_course_id_courses')),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], name=op.f('fk_student_reports_instructor_id_users')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_student_reports_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_student_reports'))
    )
    op.create_table('students_courses',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_students_courses_course_id_courses')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_students_courses_student_id_students')),
    sa.PrimaryKeyConstraint('student_id', 'course_id', name=op.f('pk_students_courses')),
    sa.UniqueConstraint('student_id', 'course_id', name=op.f('uq_students_courses_student_id'))
    )
    op.create_table('users_courses',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_users_courses_course_id_courses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_courses_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'course_id', name=op.f('pk_users_courses')),
    sa.UniqueConstraint('user_id', 'course_id', name=op.f('uq_users_courses_user_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_courses')
    op.drop_table('students_courses')
    op.drop_table('student_reports')
    op.drop_table('course_reports')
    op.drop_table('courses')
    op.drop_table('users')
    op.drop_table('students')
    op.drop_table('levels')
    op.drop_table('departments')
    # ### end Alembic commands ###
